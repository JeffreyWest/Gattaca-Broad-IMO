% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EvoFreq_Parsers.R
\name{read.HAL}
\alias{read.HAL}
\title{read.HAL}
\usage{
read.HAL(path_to_file, fill_name = NULL, get_evofreq_df = TRUE,
  get_evofreq_arg_list = list(), get_dendogram_df = FALSE,
  get_evogram_arg_list = list())
}
\arguments{
\item{path_to_file}{String defining the location of the data output from HAL}

\item{fill_name}{Optional string defining which attribute to color by. See \code{\link{update_colors}} for more details.}

\item{get_evofreq_df}{Boolean defining if a freq_frame and evofreq should be returned.}

\item{get_evofreq_arg_list}{List containing additional arguments passed to \code{\link{get_evofreq}}}

\item{get_dendogram_df}{Boolean defining if the dataframes to plot evograms and the evogram itself should be returned.}

\item{get_evogram_arg_list}{List containing additional arguments passed to \code{\link{get_evogram}}}
}
\value{
List containing information get and plot Muller plots and dendrograms
}
\description{
read.HAL
}
\examples{
\donttest{
## Default is to return the plot and all info needed to create new ones
hal_info <- read.HAL(path_to_hal_results)
print(hal_info$evofreq_plot)

### Can define column to use for coloring
hal_info <- read.HAL(path_to_hal_results, fill_name = "Passengers")
print(hal_info$evofreq_plot)

### The information needed to create new plots is also returned. This can be useful if you want to change colors
updated_plot <- update_colors(hal_info$freq_frame, hal_info$clones, hal_info$attributes$Drivers)
plot_evofreq(updated_plot)

### Can use a list to pass additional arguments to get_evofreq
evofreq_args <- list("threshold"=0.0, "clone_cmap"="plasma")
hal_info <- read.HAL(path_to_hal_results, fill_name = "Passengers", get_evofreq_arg_list = evofreq_args)
print(hal_info$evofreq_plot)

### Use the same approach to get dendrograms by setting  get_dendogram_df = T.  Set return_dendrogram_plot = T to get the dendrogram plot too
evogram_args <- list("threshold"=0.0, "clone_cmap"="plasma")
hal_info <- read.HAL(path_to_hal_results, fill_name = "Drivers", get_evogram_arg_list = evofreq_args, get_dendogram_df=T)
print(hal_info$evogram_plot)
}
}
